# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   'true': 'foo'
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  errors:
    format: "%{message}"
    messages:
      # Full list available at https://guides.rubyonrails.org/i18n.html#error-message-interpolation
      # with default values at https://github.com/rails/rails/blob/master/activemodel/lib/active_model/locale/en.yml
      inclusion: "%{attribute} is not included in the list"
      exclusion: "%{attribute} is reserved"
      invalid: "%{attribute} is invalid"
      confirmation: "%{attribute} doesn't match %{attribute}"
      accepted: "%{attribute} must be accepted"
      empty: "%{attribute} can't be empty"
      blank: "%{attribute} can't be blank"
      present: "%{attribute} must be blank"
      too_long:
        one: "%{attribute} is too long (maximum is 1 character)"
        other: "%{attribute} is too long (maximum is %{count} characters)"
      too_short:
        one: "%{attribute} is too short (minimum is 1 character)"
        other: "%{attribute} is too short (minimum is %{count} characters)"
      wrong_length:
        one: "%{attribute} is the wrong length (should be 1 character)"
        other: "%{attribute} is the wrong length (should be %{count} characters)"
      not_a_number: "%{attribute} is not a number"
      not_an_integer: "%{attribute} must be an integer"
      greater_than: "%{attribute} must be greater than %{count}"
      greater_than_or_equal_to: "%{attribute} must be greater than or equal to %{count}"
      equal_to: "%{attribute} must be equal to %{count}"
      less_than: "%{attribute} must be less than %{count}"
      less_than_or_equal_to: "%{attribute} must be less than or equal to %{count}"
      other_than: "%{attribute} must be other than %{count}"
      odd: "%{attribute} must be odd"
      even: "%{attribute} must be even"

      # Our own
      date_missing_component: "%{attribute} must specify a day, month and year"


  activerecord:
    errors:
      models:
        test:
          attributes:
            product:
              required: "Select the product which was tested"
        test/result:
          attributes:
            date:
              invalid: "Enter a real date of the test"
              date_missing_component: "Enter date of the test and include a day, month and year"
        test/request:
          attributes:
            date:
              invalid: "Enter a real date of the test request"
              date_missing_component: "Enter date of the test request and include a day, month and year"
        corrective_action:
          attributes:
            product:
              required: "Select the product the corrective action relates to"
            date_decided:
              invalid: "Enter a real date when the corrective action was decided"
              date_missing_component: "Enter the date the corrective action was decided and include a day, month and year"
