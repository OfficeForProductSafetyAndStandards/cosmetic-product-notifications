name: Tests

on: [push]

env:
  SEARCH_HOST: search
  SUBMIT_HOST: submit
  DATABASE_URL: postgres://localhost:5432/cosmetics_test
  OPENSEARCH_URL: http://localhost:9200
  PGHOST: localhost
  PGUSER: postgres
  RAILS_ENV: test
  REDIS_URL: redis://localhost:6379

jobs:
  rspec:
    name: "RSpec"
    runs-on: ubuntu-latest

    # Example for can be found here:
    # https://github.com/actions/example-services/tree/master/.github/workflows
    services:
      postgres:
        image: postgres:13.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      opensearch:
        image: opensearchproject/opensearch:1.2.3
        env:
          DISABLE_SECURITY_PLUGIN: true
        ports: ["9200:9200"]
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

      redis:
        image: redis
        ports: ["6379:6379"]

    strategy:
      fail-fast: false
      matrix:
        rspec-group:
          - spec/features
          - spec --exclude-pattern "spec/features/**/*_spec.rb"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.x
      - uses: actions/cache@v3
        with:
          path: cosmetics-web/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - uses: actions/cache@v3
        with:
          path: cosmetics-web/node_modules
          key: ${{ runner.OS }}-node
          restore-keys: |
            ${{ runner.OS }}-node
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install Ruby Gems
        run: |
          cd cosmetics-web
          gem install bundler --no-doc
          bundle config path vendor/bundle
          bundle check || bundle install --without development --jobs=4 --retry=3
      - name: Install JavaScript dependencies
        run: |
          cd cosmetics-web
          npm install yarn -g
          yarn install
      - name: Prepare application database
        run: |
          cd cosmetics-web
          bin/rails db:create db:schema:load
      - name: Prepare assets for tests
        run: bin/rails test:prepare    
      - name: Run Tests
        env:
          TWO_FACTOR_AUTHENTICATION_ENABLED: false
          CI: true
          COVERALLS_REPO_TOKEN: ${{secrets.CoverallsToken}}
        run: |
          cd cosmetics-web
          # to display branch properly, coveralls needs GIT_BRANCH env var to be set
          GIT_BRANCH=${GITHUB_REF##*/} bundle exec rspec ${{ matrix.rspec-group }}
      - name: Dump docker logs
        uses: jwalton/gh-docker-logs@v1
        if: always()
        with:
          images: "opensearchproject/opensearch"
