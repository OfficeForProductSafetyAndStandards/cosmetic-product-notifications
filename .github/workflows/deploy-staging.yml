name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    services:
      opensearch:
        image: opensearchproject/opensearch:latest
        ports:
          - 9200:9200
        options: >-
          --health-cmd="curl -sS localhost:9200 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby 3.2.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Install cf client
        env:
          CF_CLI_VERSION: v7
        run: |
          curl -A "" -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C /tmp
          sudo cp /tmp/cf7 /usr/local/bin/cf

      - name: Create GitHub deployment for Staging
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BRANCH: main
        working-directory: cosmetics-web
        run: |
          source deploy-github-functions.sh
          gh_deploy_create staging

      - name: Initiate Staging deployment status
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        working-directory: cosmetics-web
        run: |
          source deploy-github-functions.sh
          log_url="https://github.com/$GITHUB_REPOSITORY/actions?query=branch%3Amain+workflow%3ADeploy+Staging"
          echo "LOG_URL=$log_url" >> $GITHUB_ENV
          gh_deploy_initiate staging $log_url

      - name: Install Dependencies
        working-directory: cosmetics-web
        run: bundle install --jobs 4 --retry 3

      - name: Run Database Migrations
        working-directory: cosmetics-web
        run: bin/rails db:migrate

      - name: Deploy to Staging
        env:
          SPACE: staging
          APP_NAME: cosmetics-web
          SUBMIT_HOST: staging-submit.cosmetic-product-notifications.service.gov.uk
          SEARCH_HOST: staging-search.cosmetic-product-notifications.service.gov.uk
          SUPPORT_HOST: staging-support.cosmetic-product-notifications.service.gov.uk
          WEB_INSTANCES: 2
          WEB_MAX_THREADS: 1
          WORKER_MAX_THREADS: 10
          WORKER_INSTANCES: 2
          CF_USERNAME: "${{ secrets.PaaSUsernameStaging }}"
          CF_PASSWORD: "${{ secrets.PaaSPasswordStaging }}"
          SENTRY_SERVICE_NAME: cosmetics-staging-sentry-env
        working-directory: cosmetics-web
        run: |
          cf api api.london.cloud.service.gov.uk
          cf auth
          cf target -o 'beis-opss' -s $SPACE
          chmod +x ./deploy.sh
          ./deploy.sh
          cf logout

      - name: Update Staging deployment status (success)
        if: success()
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        working-directory: cosmetics-web
        run: |
          source deploy-github-functions.sh
          environment_url=https://staging-submit.cosmetic-product-notifications.service.gov.uk/
          gh_deploy_success staging $LOG_URL $environment_url

      - name: Update Staging deployment status (failure)
        if: failure()
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        working-directory: cosmetics-web
        run: |
          source deploy-github-functions.sh
          gh_deploy_failure staging $LOG_URL
