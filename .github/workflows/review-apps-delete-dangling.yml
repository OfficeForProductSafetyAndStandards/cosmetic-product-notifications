name: Delete dangling review apps

on:
  schedule:
    - cron: "0 1 * * *" # Every night at 1am

jobs:
  cleanup_reviewapp:
    name: Delete dangling review apps
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      SPACE: int
      CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
      CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
    steps:
    - uses: actions/checkout@v3
    - name: Install cf client
      env:
        CF_CLI_VERSION: v7
      run: |
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C /tmp
        sudo cp /tmp/cf7 /usr/local/bin/cf
    - name: Retrieve list of active pull requests
      id: retrieve-pull-requests
      run: |
        # Gets open PR numbers and builds the review app name for each PR. Returns an array.
        active_prs=(`curl -H "Accept: application/vnd.github.groot-preview+json" https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls | jq -r '.[] | "cosmetics-pr-\(.number)"'`)

        # Makes the active prs list available for further steps
        echo "::set-output name=ACTIVE_PRS::${active_prs[@]}"
    - name: Login into CloudFoundry
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
    - name: Retrieve list of current review apps
      id: retrieve-review-apps
      run: |
        # Stores name of the review apps as an array
        review_apps=(`cf apps | grep cosmetics-pr- | awk '{print $1}'`)

        # Makes the review apps list available for further steps
        echo "::set-output name=REVIEW_APPS::${review_apps[@]}"
    - name: Identify dangling review apps
      id: identify-dangling
      env:
        ACTIVE_PRS: ${{ steps.retrieve-pull-requests.outputs.ACTIVE_PRS }}
        REVIEW_APPS: ${{ steps.retrieve-review-apps.outputs.REVIEW_APPS }}
      run: |
        # Iterates through review apps list and adds them to the dangling list
        # unless they correspond to one of the open pull requests.
        dangling_review_apps=()

        for review_app in ${REVIEW_APPS[@]}; do
          review_app_is_active="false"
          for active in ${ACTIVE_PRS[@]}; do
            if [ "$review_app" = "$active" ]; then
              review_app_is_active="true"
              break
            fi
          done
          if [ "$review_app_is_active" = "false" ]; then
            dangling_review_apps+=($review_app)
          fi
        done

        # Makes the dangling review apps list available for further steps
        echo "::set-output name=DANGLING_REVIEW_APPS::${dangling_review_apps[@]}"
    - name: Delete dangling review apps
      id: delete-dangling
      env:
        DANGLING_REVIEW_APPS: ${{ steps.identify-dangling.outputs.DANGLING_REVIEW_APPS }}
      run: |
        for dangling in ${DANGLING_REVIEW_APPS[@]}; do
          echo "Deleting ${dangling}"
          cf stop ${dangling}
          cf run-task ${dangling} --command "./env/delete-opensearch-indexes.sh" --name delete-opensearch-indexes
          task_status=0; until [ $task_status = "SUCCEEDED" ]; do task_status="$(cf tasks ${dangling} | grep delete-opensearch-indexes | awk '{print $3}')" && if [ "$task_status" = "FAILED" ]; then break; else echo "waiting" && sleep 10; fi; done;
          cf delete -f -r ${dangling}
          cf delete-service -f cosmetics-review-redis-${dangling:13} # Substring from 13th char contains the PR number
        done
    - name: Logout from CloudFoundry
      run: cf logout
