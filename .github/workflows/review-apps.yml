name: Review app

on: [pull_request]

jobs:
  reviewapp:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Create GitHub deployment
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
        BRANCH: ${{ github.head_ref }}
      run: |
        DEPLOY_URL=$(curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/UKGovernmentBEIS/beis-opss/deployments \
          -d '{
          "ref": "'"$BRANCH"'",
          "description": "Review App deploy",
          "environment": "int",
          "auto_merge": false,
          "required_contexts": []
          }' | jq '.url?' | tr -d '"') # Gets 'url' field from the response and trims the surronding quotes.

        if [ -z "$DEPLOY_URL" ]; then
          echo "Failed to create Github deployment"
        else
          # We need these values to be shared between steps
          echo "::set-env name=PR_NUMBER::$(echo "$GITHUB_REF" | awk -F / '{print $3}')"
          echo "::set-env name=DEPLOY_URL::$DEPLOY_URL"
          echo "Github deployment created: $DEPLOY_URL"
        fi

    - name: Initiate deployment status
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
        DEPLOY_STATUSES_URL: ${{ env.DEPLOY_URL }}/statuses
        PR_NUMBER: ${{ env.PR_NUMBER }}
      run: |
        # The Pull Request checks URL needs to be available in further steps
        PR_CHECKS_URL=$(echo "https://github.com/UKGovernmentBEIS/beis-opss/pull/$PR_NUMBER/checks")
        echo "::set-env name=PR_CHECKS_URL::$PR_CHECKS_URL"

        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.ant-man-preview+json" \
          -H "Accept: application/vnd.github.flash-preview+json" \
          $DEPLOY_STATUSES_URL \
          -d '{
            "environment": "int",
            "state": "in_progress",
            "description": "Deployment initiated",
            "log_url": "'"$PR_CHECKS_URL"'"
          }'

    - name: Install cf client
      env:
        CF_CLI_VERSION: 7.0.0-beta.25
      run: |
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C /tmp
        sudo cp /tmp/cf7 /usr/local/bin/cf7

    - name: Deploy
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
      run: |
        cf7 api api.london.cloud.service.gov.uk
        cf7 auth
        cf7 target -o 'beis-opss' -s $SPACE
        export PR_NUMBER=`echo $GITHUB_REF | grep -o '[0-9_]\+'`
        export DB_VERSION=`cat cosmetics-web/db/schema.rb | grep 'ActiveRecord::Schema.define' | grep -o '[0-9_]\+'`
        export REVIEW_INSTANCE_NAME=pr-$PR_NUMBER
        export DB_NAME=cosmetics-db-$DB_VERSION
        export REDIS_NAME=cosmetics-review-redis-$PR_NUMBER
        ./cosmetics-web/deploy-review.sh
        cf7 logout

    - name: Update deployment status (success)
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
        DEPLOY_STATUSES_URL: ${{ env.DEPLOY_URL }}/statuses
        PR_CHECKS_URL: ${{ env.PR_CHECKS_URL }}
        PR_NUMBER: ${{ env.PR_NUMBER }}
      run: |
        DEPLOYED_WEBSITE="https://cosmetics-pr-${PR_NUMBER}-submit-web.london.cloudapps.digital/"

        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.ant-man-preview+json" \
          $DEPLOY_STATUSES_URL \
          -d '{
            "environment": "int",
            "state": "success",
            "description": "Deployment succeeded",
            "environment_url": "'"$DEPLOYED_WEBSITE"'",
            "log_url": "'"$PR_CHECKS_URL"'"
          }'

    - name: Update deployment status (failure)
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
        DEPLOY_STATUSES_URL: ${{ env.DEPLOY_URL }}/statuses
        PR_CHECKS_URL: ${{ env.PR_CHECKS_URL }}
      run: |
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.ant-man-preview+json" \
          $DEPLOY_STATUSES_URL \
          -d '{
            "environment": "int",
            "state": "failure",
            "description": "Deployment failed",
            "log_url": "'"$PR_CHECKS_URL"'"
          }'
