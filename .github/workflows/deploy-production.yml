name: Deploy to Production

on:
  release:
    types:
      - published

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install cf client
        env:
          CF_CLI_VERSION: '7.7.15'
        run: |
          curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}&source=github" -o cf-cli.tgz
          tar -xzf cf-cli.tgz -C /tmp
          sudo cp /tmp/cf7 /usr/local/bin/cf
          sudo chmod +x /usr/local/bin/cf
          cf --version  # Verify installation

      - name: Log in to Cloud Foundry
        env:
          CF_USERNAME: "${{ secrets.PaaSUsernameProduction }}"
          CF_PASSWORD: "${{ secrets.PaaSPasswordProduction }}"
        run: |
          cf api api.london.cloud.service.gov.uk
          cf auth "$CF_USERNAME" "$CF_PASSWORD"

      - name: Create GitHub deployment for Production
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BRANCH: main
        run: |
          source cosmetics-web/deploy-github-functions.sh
          gh_deploy_create production

      - name: Initiate Production deployment status
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          source cosmetics-web/deploy-github-functions.sh
          log_url="https://github.com/$GITHUB_REPOSITORY/actions?query=branch%3Amain+workflow%3ADeploy+Production"
          echo "LOG_URL=$log_url" >> $GITHUB_ENV
          gh_deploy_initiate production $log_url

      - name: Deploy to Production
        env:
          SPACE: prod
          APP_NAME: cosmetics-web
          SUBMIT_HOST: submit.cosmetic-product-notifications.service.gov.uk
          SEARCH_HOST: search.cosmetic-product-notifications.service.gov.uk
          SUPPORT_HOST: support.cosmetic-product-notifications.service.gov.uk
          WEB_INSTANCES: 8
          WEB_MAX_THREADS: 1
          WORKER_MAX_THREADS: 10
          WORKER_INSTANCES: 4
          SENTRY_SERVICE_NAME: cosmetics-sentry-env
        run: |
          cf target -o 'beis-opss' -s $SPACE
          chmod +x ./cosmetics-web/deploy.sh
          ./cosmetics-web/deploy.sh
          cf logout

      - name: Update Production deployment status (success)
        if: success()
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          source cosmetics-web/deploy-github-functions.sh
          environment_url=https://submit.cosmetic-product-notifications.service.gov.uk/
          gh_deploy_success production $LOG_URL $environment_url

      - name: Update Production deployment status (failure)
        if: failure()
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          source cosmetics-web/deploy-github-functions.sh
          gh_deploy_failure production $LOG_URL

      - name: Create Sentry release
        if: success()
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: opss
          SENTRY_PROJECT: beis-cosmetics
        with:
          environment: prod
