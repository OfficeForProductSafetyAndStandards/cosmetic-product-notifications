name: Delete review app

on:
  pull_request:
    types: [closed]

env:
  PR_NUMBER: ${{ github.event.number }}

jobs:
  cleanup_reviewapp:
    name: Delete review app
    runs-on: ubuntu-latest
    # Skip if it is a Dependabot created PR. They do not have Review Apps to delete.
    if: ${{ github.actor != 'dependabot[bot]' }}
    env:
      SPACE: int
      CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
      CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
    steps:
    - name: Install cf client
      env:
        CF_CLI_VERSION: v7
      run: |
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C /tmp
        sudo cp /tmp/cf7 /usr/local/bin/cf

    - name: Delete review app
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        if [[ $(cf apps | grep cosmetics-pr-$PR_NUMBER) ]]; then
          cf stop cosmetics-pr-$PR_NUMBER
          cf run-task cosmetics-pr-$PR_NUMBER --command "./env/delete-opensearch-indexes.sh" --name delete-opensearch-indexes
          task_status=0; until [ $task_status = "SUCCEEDED" ]; do task_status="$(cf tasks cosmetics-pr-$PR_NUMBER | grep delete-opensearch-indexes | awk '{print $3}')" && if [ "$task_status" = "FAILED" ]; then break; else echo "waiting" && sleep 10; fi; done;
          cf delete -f -r cosmetics-pr-$PR_NUMBER
          cf delete-service -f cosmetics-review-redis-$PR_NUMBER
        fi
        cf logout

    - name: Checkout code to get deploy functions
      uses: actions/checkout@v2

    - name: Deactivate Github deployment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source cosmetics-web/deploy-github-functions.sh
        gh_deploy_deactivate_dangling review-app-$PR_NUMBER
