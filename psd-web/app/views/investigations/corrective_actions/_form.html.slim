= render "form_components/govuk_input", key: :summary, form: form,
        classes: "govuk-!-width-two-thirds",
        label: { text: "Summary", classes: "govuk-label--m" }
= render "form_components/govuk_date_input", form: form, key: :date_decided,
        fieldset: { legend: { classes: "govuk-fieldset__legend--m", text: "When was this action decided?" } }

- if allow_product_linking
  = render "components/govuk_fieldset",
          legend: { text: "Which product is subject to action?", classes: "govuk-fieldset__legend--m" } do
    .govuk-form-group class=("govuk-form-group--error" if corrective_action.errors[:product].any?)
      - if investigation.products.empty?
        span.govuk-hint
          | There are no products on this case.
          br
          = link_to "Add a product", new_investigation_product_path(investigation)
          |  to record a corrective action.
      - elsif investigation.products.size == 1
        = render "form_components/govuk_input", key: :product_name, form: form, attributes: { disabled: true },
                classes: "govuk-!-width-two-thirds", value: investigation.products.first.name,
                label: { text: "Product name", classes: "govuk-visually-hidden" }
        = form.hidden_field :product_id, value: investigation.products.first.id
      - else
        = render "form_components/govuk_select", key: :product_id, form: form, show_all_values: true,
                items: investigation.products.map { |product| { text: product.name, value: product.id } },
                is_autocomplete: true, hint: { text: "Only products already added to the case are listed." },
                label: { text: "Product", classes: "govuk-visually-hidden" }

= render "form_components/govuk_select", choices: relevant_legislation, key: :legislation, form: form,
        is_autocomplete: true, show_all_values: true,
        label: { text: "Under which legislation?", classes: "govuk-label--m" },
        hint: { text: "Select the relevant legislation from the list, or enter a different one." }

- if allow_business_linking
  = render "components/govuk_fieldset",
          legend: { text: "Which business is responsible?", classes: "govuk-fieldset__legend--m" } do
    .govuk-form-group class=("govuk-form-group--error" if corrective_action.errors[:business].any?)
      - if investigation.businesses.empty?
        span.govuk-hint
          | There are no businesses associated with this case.
      - else
        = render "form_components/govuk_select", key: :business_id, form: form, show_all_values: true,
                items: investigation.businesses.map { |business| { text: business.trading_name, value: business.id } },
                selected: (investigation.businesses.size == 1 && investigation.businesses.first.id),
                hint: { text: "Only businesses already added to the case are listed." }, is_autocomplete: true,
                label: { text: "Business", classes: "govuk-visually-hidden" }

= render "form_components/govuk_textarea", key: :details, form: form, attributes: { maxlength: 50000 },
        label: { text: "Further details", classes: "govuk-label--m" }
- file_field = capture do
  = render "related_attachment_fields", form: form, file_blob: @file_blob, attachment_name: :file
= render "form_components/govuk_radios", form: form, key: :related_file,
        fieldset: { legend: { text: "Are there any files related to the action?",
                classes: "govuk-fieldset__legend--m" } },
        items: [{ text: "Yes", value: "Yes", conditional: { html: file_field } },
                { text: "No", value: "No" }]
