version: '3'

services:
  db:
    build:
      context: ./dev-docker/db/
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    env_file:
      - ./dev-docker/.env.keycloak

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.3
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
    volumes:
      - elasticsearch-volume:/usr/share/elasticsearch/data

  redis:
    image: redis
    hostname: redis

  keycloak:
    image: beisopss/keycloak:latest
    command: ls /opt/jboss/keycloak/configuration #/opt/jboss/keycloak/bin/standalone.sh -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.strategy=OVERWRITE_EXISTING -Dkeycloak.migration.file=/opt/jboss/keycloak/configuration/initial-setup.json -b 0.0.0.0
    # command: #/opt/jboss/keycloak/bin/standalone.sh -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.strategy=OVERWRITE_EXISTING -Dkeycloak.migration.file=/opt/jboss/keycloak/configuration/initial-setup.json -b 0.0.0.0
    #    env_file:
    #      - ./dev-docker/.env.keycloak
    #    environment:
    #      - NOTIFY_API_KEY=
    #        #    depends_on:
    #        #      - db
    #    ports:
    #      - "8080:8080"
    #      - "9990:9990"

  maintenance:
    build:
      context: .
      dockerfile: ./maintenance/Dockerfile
    ports:
      - "3005:3005"
    volumes:
      # ${PWD-.} calls PWD on systems which have that variable, and . on others e.g. windows
      - ${PWD-.}/maintenance:/maintenance

  cosmetics-web:
    build:
      context: .
      dockerfile: ./cosmetics-web/Dockerfile
    volumes:
      # ${PWD-.} calls PWD on systems which have that variable, and . on others e.g. windows
      - ${PWD-.}/cosmetics-web:/cosmetics-web
      - bundle-cache:/usr/local/bundle
    depends_on:
      - db
      - elasticsearch
      - keycloak
      - redis
      - cosmetics-worker
    env_file:
        - .env.keycloak.cosmetics
  cosmetics-worker:
    build:
      context: .
      dockerfile: ./cosmetics-worker/Dockerfile
    command: bin/sidekiq -C config/sidekiq.yml
    volumes:
      # ${PWD-.} calls PWD on systems which have that variable, and . on others e.g. windows
      - ${PWD-.}/cosmetics-web:/cosmetics-web
      - bundle-cache:/usr/local/bundle
    depends_on:
      - db
      - elasticsearch
      - redis
    env_file:
      - .env.antivirus

volumes:
  postgres-volume:
  elasticsearch-volume:
  bundle-cache:
