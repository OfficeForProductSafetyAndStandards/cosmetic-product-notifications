<% title = "Exposure condition" %>
<% question = "Is #{@component_name} intended to be rinsed off or left on?" %>
<% items = NanoMaterial.exposure_conditions.map { |key, value| { text: get_exposure_condition_name(key), value: value } } %>

<% content_for :page_title, title %>
<% content_for :after_header do %>
  <%= govukBackLink text: "Back", href: previous_wizard_path %>
<% end %>

<%= form_with(model: @component, url: wizard_path, method: :put) do |form| %>
  <%= form.fields_for :nano_material do |nano_material_form| %>
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">

        <% if @component.errors.messages.include?(:"nano_material.exposure_condition") %>
          <%= govukErrorSummary(titleText: "There is a problem", errorList: [{text: @component.errors.messages[:"nano_material.exposure_condition"][0], href: "#component_nano_material_attributes_exposure_condition_rinse_off"}] ) %>
        <% end %>
        <%= nano_material_form.hidden_field :exposure_condition, value: nil %>
        <%= render "form_components/govuk_radios", form: nano_material_form, key: :exposure_condition,
                fieldset: { legend: { text: question, classes: "govuk-label--xl", isPageHeading: true } },
                items: items %>
        <%= govukButton text: "Continue" %>

      </div>
    </div>
  <% end %>
<% end %>
