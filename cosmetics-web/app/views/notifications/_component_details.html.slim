- if component.notification.notified_post_eu_exit?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Contains CMR substances
    td.govuk-table__cell
      = component.cmrs.any? ? "Yes" : "No"
    - if component.cmrs.any?
      tr.govuk-table__row
        th.govuk-table__header[scope="row"]
          | CMR substances
        td.govuk-table__cell
          = render "none_or_bullet_list", entities_list: component.cmrs.map(&:display_name)

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Nanomaterials
  td.govuk-table__cell
    = render "none_or_bullet_list", entities_list: component.nano_material&.nano_elements&.map(&:display_name)
- if component.nano_material&.nano_elements.present?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Application instruction
    td.govuk-table__cell
      = get_exposure_routes_names(component.nano_material.exposure_routes)
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Exposure condition
    td.govuk-table__cell
      = get_exposure_condition_name(component.nano_material.exposure_condition)

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Category of product
  td.govuk-table__cell
    = get_category_name(component.root_category)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    = "Category of #{get_category_name(component.root_category)&.downcase&.singularize}"
  td.govuk-table__cell
    = get_category_name(component.sub_category)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    = "Category of #{get_category_name(component.sub_category)&.downcase&.singularize}"
  td.govuk-table__cell
    = get_category_name(component.sub_sub_category)

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Formulation given as
  td.govuk-table__cell
    = get_notification_type_name(component.notification_type)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Frame formulation
  td.govuk-table__cell
    = get_frame_formulation_name(component.frame_formulation)

- if !component.predefined?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Formulation
    td.govuk-table__cell
      - if component.exact? && component.exact_formulas.present?
        = render "none_or_bullet_list", entities_list: format_exact_formulas(component.exact_formulas),
                key_name: :inci_name, value_name: :quantity
      - elsif component.range? && component.range_formulas.present?
        = render "none_or_bullet_list", entities_list: format_range_formulas(component.range_formulas),
                key_name: :inci_name, value_name: :range
      - elsif component.formulation_file.attached?
        - if component.formulation_file.metadata["safe"]
          = link_to component.formulation_file.filename, url_for(component.formulation_file)
        - else
          = "Processing file #{component.formulation_file.filename} ..."
          br
          = link_to "Refresh",
                  edit_responsible_person_notification_path(@responsible_person, @notification),
                  class: "govuk-link--no-visited-state"
      - elsif allow_edits
        = link_to "Add formulation document",
                new_responsible_person_notification_component_formulation_path(@notification.responsible_person,
                        @notification, component),
                class: "govuk-link--no-visited-state"
      - else
        | N/A
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Physical form
  td.govuk-table__cell
    = get_physical_form_name(component.physical_form)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Special applicator
  td.govuk-table__cell
    = component.special_applicator.present? ? "Yes" : "No"
- if component.special_applicator.present?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Applicator type
    td.govuk-table__cell
      = component_special_applicator_name(component)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Acute poisoning information
  td.govuk-table__cell
    = component.acute_poisoning_info

- if component.predefined?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Contains poisonous ingredients
    td.govuk-table__cell
      = component.contains_poisonous_ingredients.present? ? "Yes" : "No"

- if component.trigger_questions
  - component.trigger_questions.each do |question|
    = render "notifications/trigger_question_details", trigger_question: question, display_not_applicable: true
