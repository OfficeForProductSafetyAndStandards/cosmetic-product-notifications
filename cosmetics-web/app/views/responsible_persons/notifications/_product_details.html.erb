<%= govukSummaryList(
  classes: "govuk-summary-list--no-border govuk-!-margin-top-5 govuk-!-margin-bottom-4 opss-summary-list-mixed",
  rows: notification_summary_references_rows(notification)
) %>

<section id="product-table" class="govuk-!-margin-top-7">
  <h2 class="govuk-visually-hidden">The product</h2>

  <%= govukSummaryList(classes: "opss-summary-list-mixed",
                        rows: notification_summary_product_rows(notification)) %>
</section>

<% notification.components.order(:id).each_with_index do |component, i| %>
  <%
    item_count = "Item #{i + 1}"
    component_title = if notification.is_multicomponent?
                        component.name.present? ? "#{item_count}: #{component.name}" : item_count
                      else
                        "Details"
                      end
  %>
  <section id=<%= component.name&.parameterize.presence || item_count.parameterize %> class="govuk-!-margin-top-9 opss-grouping">
    <h3 class="govuk-heading-m opss-grouping__heading-m"><%= component_title %></h3>
    <%= govukSummaryList(
      classes: "opss-summary-list-mixed",
      rows: notification_summary_component_rows(
        component,
        include_shades: notification.is_multicomponent?
      )
    ) %>

    <% if can_view_product_ingredients? %>
      <h3 class="govuk-heading-m govuk-!-margin-top-8 govuk-!-margin-bottom-2">
        Ingredients
      </h3>
      <%= govukSummaryList(
        classes: "opss-summary-list-mixed",
        rows: [
          {
            key: { text: "Formulation given as" },
            value: { text: get_notification_type_name(component.notification_type) },
          },
          if component.predefined?
            {
              key: { text: "Frame formulation" },
              value: { text: get_frame_formulation_name(component.frame_formulation) },
            }
          elsif component.formulation_file.attached?
            {
              key: { text: "Formulation" },
              value: { html: render("notifications/component_details_formulation_ingredients",
                                    component: component) },
            }
          end,
        ].compact
      ) %>
      <% if component.ingredients.non_poisonous.any? %>
        <%= render(partial: "responsible_persons/notifications/ingredients",
                   locals: { ingredients: component.ingredients.non_poisonous }) %>
      <% end %>
      <% if component.ingredients.poisonous.any? %>
        <h4 class="govuk-heading-s govuk-!-margin-top-5 govuk-!-margin-bottom-2">
          Ingredients the <abbr title="National Poisons Information Service">NPIS</abbr> needs to know about
        </h4>
        <%= render(partial: "responsible_persons/notifications/ingredients",
                   locals: { ingredients: component.ingredients.poisonous }) %>
      <% end %>
    <% end %>
  </section>
<% end %>
