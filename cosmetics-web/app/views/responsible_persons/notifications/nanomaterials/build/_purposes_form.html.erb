<%
  standard_purposes = NanoElementPurposes.standard
  standard_purposes_items = standard_purposes.map do |purpose|
    { key: purpose.name,
      text: purpose.upcase_display_name,
      checked: purposes_form.purposes&.include?(purpose.name) }
  end
%>

<%= form_with(model: purposes_form, url: form_url, scope: :purposes_form, method: form_method) do |f| %>
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <%= error_summary(purposes_form.errors,
                        map_errors: { purpose_type: :purposes_form_purpose_type_standard,
                                      purposes: :purposes_form_colorant }) %>
      <% standard_purposes_checkboxes_html = capture do %>
        <%= govukCheckboxes(
              form: f,
              key: :purposes,
              fieldset: { legend: { text: "Select all that apply", isPageHeading: false } },
              items: standard_purposes_items,
            ) %>
      <% end %>
      <%= govukRadios(
            form: f,
            key: :purpose_type,
            fieldset: { legend: { text: "What is the purpose of this nanomaterial?",
                                  classes: "govuk-label--l",
                                  isPageHeading: true } },
            items: [{ text: to_sentence(standard_purposes.map(&:upcase_display_name), last_word_connector: " or "),
                      value: "standard",
                      conditional: { html: standard_purposes_checkboxes_html } },
                    { text: NanoElementPurposes.other.upcase_display_name,
                      value: NanoElementPurposes.other.name }]
          ) %>
      <%= govukButton text: "Continue" %>
    </div>
  </div>
<% end %>