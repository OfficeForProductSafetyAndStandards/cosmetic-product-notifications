<% title = "Select formulation type" %>
<% question = "How do you want to give the formulation of #{@component_name}?" %>
<%
  frame_formulations = FrameFormulations::CATEGORIES.dig(@component.root_category.to_s, @component.sub_category.to_s, @component.sub_sub_category.to_s)
  items = formulations_types_label
    .reject { |type_key, _| type_key == :predefined && frame_formulations.nil? }
    .map { |type_key, type_text| { text: type_text, value: type_key.to_sym, checked: answer_checked?(type_key.to_sym) } }
%>

<% page_title title, errors: @component.errors.any? %>
<% content_for :after_header do %>
  <%= govukBackLink text: "Back", href: previous_wizard_path %>
<% end %>

<%
  warning_text = ""
  warning_text += "There are currently no frame formulations for this chosen product category - choose from one of the following options, below." if frame_formulations.nil?
  warning_text += "<br><br>" if frame_formulations.nil? && @component.notification_type.present?
  warning_text += "Changing this selection will remove all previously added ingredients." if @component.notification_type.present?
  warning_html = if warning_text.present?
    govukWarningText(iconFallbackText: "Warning",
                     classes: "govuk-!-width-three-quarters govuk-!-margin-top-3 opss-warning-text--m",
                     html: warning_text.html_safe)
  end
%>

<%= form_with model: @component, url: wizard_path, method: :put do |form| %>
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <%= error_summary_for(@component, first_values: { notification_type: items[0][:value] }) %>
      <%= govukRadios(
            form: form,
            key: :notification_type,
            fieldset: { legend: { text: question, classes: "govuk-fieldset__legend--l", isPageHeading: true } },
            hint: { html:  warning_html },
            items: items,
          ) %>
      <%= govukButton text: "Continue" %>
    </div>
  </div>
<% end %>
